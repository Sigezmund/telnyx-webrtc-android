// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: 'versions.gradle'
    ext.kotlin_version = "1.4.31"
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
        classpath "com.bugsnag:bugsnag-android-gradle-plugin:$versions.bugsnag"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.4.20"
        classpath deps.google_play_services
        classpath deps.android_gradle_plugin
        classpath deps.kotlin.plugin
        classpath deps.hilt.plugin
        classpath deps.jacoco
    }
}

apply plugin: "com.vanniktech.android.junit.jacoco"

junitJacoco {
    jacocoVersion = '0.8.7' // type String
    ignoreProjects = [] // type String array
    excludes = [
            // data binding
            'android/databinding/**/*.class',
            '**/android/databinding/*Binding.class',
            '**/android/databinding/*',
            '**/androidx/databinding/*',
            '**/BR.*',
            // android
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            // kotlin
            '**/*MapperImpl*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/*Component*.*',
            '**/*BR*.*',
            '**/Manifest*.*',
            '**/*$Lambda$*.*',
            '**/*Companion*.*',
            '**/*Module*.*',
            '**/*Dagger*.*',
            '**/*MembersInjector*.*',
            '**/*_MembersInjector.class',
            '**/*_Factory*.*',
            '**/*_Provide*Factory*.*',
            '**/*Extensions*.*',
            // sealed and data classes
            '**/*$Result.*',
            '**/*$Result$*.*'
    ]// type String List
    includeNoLocationClasses = false // type boolean
    includeInstrumentationCoverageInMergedReport = false // type boolean
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    configurations.all {
        resolutionStrategy.force 'org.objenesis:objenesis:2.6'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

